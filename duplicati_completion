source /opt/duplicati_helper/duplicati.conf
# Completion for duplicati
#   duplicati repair <backup name>
#   duplicati backup <backup name>
#   duplicati kill <backup name>
#   duplicati server
#   duplicati usage
#   duplicati status
#   duplicati command
#   duplicati help

_duplicati() 
{
    COMPREPLY=()
    # The current duplicati script only takes 3 arguments that will be auto completed
    if [ "${#COMP_WORDS[*]}" -lt 5 ] ; then
        cur="${COMP_WORDS[COMP_CWORD]}"
        # The modifier is always the second argument
        mod="${COMP_WORDS[1]}"
        # The backup name is always the third argument
        backup="${COMP_WORDS[2]}"
   
        # The first argument is one of the modifiers 
        if [ "${#COMP_WORDS[*]}" = "2" ] ; then
            opts="repair backup kill server usage status command help"
        # the second argument is a backup name (in case the modifiers requires it)
        elif ( [ "${#COMP_WORDS[*]}" -gt 2 ] && ( [ "${mod}" = "backup" ] || [ "${mod}" = "repair" ] || [ "${mod}" = "kill" ] || [ "${mod}" = "status" ] )) ; then
            opts=""

            if [ "${#COMP_WORDS[*]}" = "3" ] ; then
                # Read the configuration file and add the backup names to the options
                if [[ -r "${BACKUP_CONFIG}" && -f "${BACKUP_CONFIG}" ]]; then
                    while read -r name path pas excl ; do
                        if [[ $name == \#* ]] ; then
                            continue
                        else
                            opts="${opts} ${name}"
                        fi
                    done < "${BACKUP_CONFIG}"
                fi
            elif ( [ "${#COMP_WORDS[*]}" = "4" ] && ( [ "${mod}" != "kill" ] || [ "${mod}" != "status" ] )) ; then
                opts="quiet"
            fi
        else
            opts=""
        fi
        
        # Show fitting options
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    fi
}
complete -F _duplicati duplicati
